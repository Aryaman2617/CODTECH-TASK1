# Python script for image classification using TensorFlow and Keras

import tensorflow as tf
from tensorflow.keras.applications import ResNet50
from tensorflow.keras.preprocessing import image
from tensorflow.keras.applications.resnet50 import preprocess_input, decode_predictions
import numpy as np

# Load pre-trained ResNet50 model
model = ResNet50(weights='imagenet')

# Function to classify an image
def classify_image(image_path):
    img = image.load_img(image_path, target_size=(224, 224))
    x = image.img_to_array(img)
    x = np.expand_dims(x, axis=0)
    x = preprocess_input(x)

    # Predict
    preds = model.predict(x)
    predictions = decode_predictions(preds, top=3)[0]  # Top 3 predictions
    return predictions

# Example usage
image_path = 'path/to/your/image.jpg'
predictions = classify_image(image_path)
for pred in predictions:
    print(f'{pred[1]}: {pred[2]:.2f}')

# Save predictions to a text file or return them to VB application
